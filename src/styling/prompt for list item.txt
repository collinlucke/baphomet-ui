I need a list item for the ListItem file. The item is essentially a movie poster with a 1px solid border vibrant primary 500. Aspect ratio of the poster is 2:3 no wide than 170px -- for now just make it a rectangle with a gray bg. In the bottom right corner will be a score - for now just make it 99.00. The color of the text will be the primary color with a 1px border of the text that is also the vibrant primary 500. The "99." should be the same size as the h2 and the "00" should be the same size as the h3. The score will actually overlap that corner - bottom of the score should be 50% of its own height below the poster and about 20px off the right edge.Each item will come from passed in data -- each movie will have the following object structure:
{
  _id: ObjectId,
  title: "The Shawshank Redemption",
  year: 1994,
  director: "Frank Darabont",
  genre: ["Drama"],
  posterUrl: "https://...",
  tmdbId: 278, // The Movie Database ID for external API integration

  // Aggregated ranking statistics (calculated from votes)
  totalWins: 145,
  totalLosses: 23,
  winningPercentage: 86.3,
  totalComparisons: 168,

  // Metadata
  addedBy: ObjectId, // userId who added this movie
  lastUpdated: Date,
  createdAt: Date
}

The "winningPercentage" is the same thing as the score. The poster will be the posterUrl. the key for each item should be the _id

Keep the work to the C:\Users\ohclt\git\BAPHOMET\baphomet-ui\src\components\MovieList\MovieListItem.tsx file. You should need to write anything anywhere else.

Let me know if you need clarifications. 


____________________________________________________
I need a new page called Add Movies. It's going to be the page that links from the "Add Movies" button in the authenticated heading - So there will be something to update both on that button and in the routes.

The page itself will essentially be a big form (but don't make it a form element, just a div). It will need the following fields:
title = string,
year = string,
director[s] = array of director names as strings
genres[s] = array of genres as strings
posterUrl: string
backdropUrl: string
tmdbId: string

these should correlate to the structure they will be saved as in mongodb:
{
  _id: ObjectId,
  title: "The Shawshank Redemption",
  year: 1994,
  director: "Frank Darabont",
  genre: ["Drama"],
  posterUrl: "https://...",
  backdropUrl: "https://...",
  tmdbId: 278, // The Movie Database ID for external API integration

  // Aggregated ranking statistics (calculated from votes)
  totalWins: 145,
  totalLosses: 23,
  winningPercentage: 86.3,
  totalComparisons: 168,

  // Metadata
  addedBy: ObjectId, // userId who added this movie
  lastUpdated: Date,
  createdAt: Date
}

I will need a search at the top of this that searches tmdb for movies by their tmdbId - see getMovieByTMDBId() in tmdbApi.ts. The structure of the return data will be like this:
{
      "adult": false,
      "backdrop_path": "/c6yfABGVKuB5cjoOwdX4AJMlzUz.jpg",
      "genre_ids": [
        35,
        14
      ],
      "id": 620,
      "original_language": "en",
      "original_title": "Ghostbusters",
      "overview": "After losing their academic posts at a prestigious university, a team of parapsychologists goes into business as proton-pack-toting \"ghostbusters\" who exterminate ghouls, hobgoblins and supernatural pests of all stripes. An ad campaign pays off when a knockout cellist hires the squad to purge her swanky digs of demons that appear to be living in her refrigerator.",
      "popularity": 6.8707,
      "poster_path": "/7E8nLijS9AwwUEPu2oFYOVKhdFA.jpg",
      "release_date": "1984-06-08",
      "title": "Ghostbusters",
      "video": false,
      "vote_average": 7.495,
      "vote_count": 9293
    }

    I think you can piece together what data comes from this that will auto-populate the fields in the form. The form should have save and cancel buttons  - don't worry about hooking those up, but you can create the state object for the new movie. The the "vote" items from tmdb do not correlate to anything that sounds like a score in our data structure