name: Baphomet Server Deploy

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install PNPM and Typescript
        run: npm install -g pnpm typescript

      - name: Set up .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GIT_REGISTRY_TOKEN }}" > ~/.npmrc

      - name: Install Dependencies
        run: pnpm install

      - name: Update lockfile
        run: pnpm update

      - name: Run Tests
        run: pnpm test

      - name: Set Environment Variables
        run: |
          echo "ATLAS_DB_PASSWORD=${{ secrets.ATLAS_DB_PASSWORD }}" >> $GITHUB_ENV
          echo "ATLAS_DB_USERNAME=${{ secrets.ATLAS_DB_USERNAME }}" >> $GITHUB_ENV
          echo "ATLAS_CLUSTER=${{ secrets.ATLAS_CLUSTER }}" >> $GITHUB_ENV
          echo "ATLAS_DB=${{ secrets.ATLAS_DB }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> $GITHUB_ENV
          echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> $GITHUB_ENV
          echo "SSL_CERT_PATH=$(echo "${{ secrets.SSL_CERT }}" | base64 --decode > certfile.cer)" >> $GITHUB_ENV
          echo "SSL_KEY_PATH=$(echo "${{ secrets.SSL_PRIVATE_KEY }}" | base64 --decode > keyfile.key)" >> $GITHUB_ENV
          echo "SSL_CA_PATH=$(echo "${{ secrets.SSL_CERT_INTERMEDIATE }}" | base64 --decode > intermediate.cer)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t collinlucke/baphomet-server:latest .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push collinlucke/baphomet-server:latest
